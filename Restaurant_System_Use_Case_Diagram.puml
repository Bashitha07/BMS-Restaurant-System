@startuml BMS Restaurant-System_Use_Case_Diagram
!theme plain
left to right direction
title BMS Restaurant-System - Use Case Diagram (CRUD Structure)

' Left side actors
actor "Customer" as customer
actor "Admin" as admin

' System boundary
rectangle "Restaurant Management System" {

    package "Order Entity" as order_entity {
        usecase "Manage Orders" as manage_orders
        
        ' CRUD Operations extending from Manage Orders
        usecase "Create Order" as create_order
        usecase "Read Order Status" as read_order
        usecase "Update Order" as update_order
        usecase "Cancel Order" as cancel_order
        
        ' Extended functions
        usecase "Track Order" as track_order
        usecase "View Order History" as view_history
        usecase "Place Order" as place_order
        usecase "Add Items to Cart" as add_cart
    }

    package "Menu Entity" as menu_entity {
        usecase "Manage Menu" as manage_menu
        
        ' CRUD Operations extending from Manage Menu
        usecase "Create Menu Item" as create_menu
        usecase "Read Menu Items" as read_menu
        usecase "Update Menu Item" as update_menu
        usecase "Delete Menu Item" as delete_menu
        
        ' Extended functions
        usecase "Browse Menu" as browse_menu
        usecase "Manage Categories" as manage_cat
    }

    package "Reservation Entity" as reservation_entity {
        usecase "Manage Reservations" as manage_reservations
        
        ' CRUD Operations extending from Manage Reservations
        usecase "Create Reservation" as create_reservation
        usecase "Read Reservation Status" as read_reservation
        usecase "Update Reservation" as update_reservation
        usecase "Cancel Reservation" as cancel_reservation
        
        ' Extended functions
        usecase "Make Reservation" as make_reservation
    }

    package "User Entity" as user_entity {
        usecase "Manage Users" as manage_users
        
        ' CRUD Operations extending from Manage Users
        usecase "Create User Account" as create_user
        usecase "Read User Profile" as read_user
        usecase "Update User Profile" as update_user
        usecase "Delete User Account" as delete_user
        
        ' Extended functions
        usecase "Register Account" as register
        usecase "Login/Logout" as login
        usecase "Manage Drivers" as manage_drivers
        usecase "Manage Staff" as manage_staff
    }

    package "Payment Entity" as payment_entity {
        usecase "Manage Payments" as manage_payments
        
        ' CRUD Operations extending from Manage Payments
        usecase "Create Payment" as create_payment
        usecase "Read Payment Status" as read_payment
        usecase "Update Payment" as update_payment
        usecase "Refund Payment" as refund_payment
        
        ' Extended functions
        usecase "Make Payment" as make_payment
        usecase "Process Payments" as process_payments
        usecase "Approve Refunds" as approve_refunds
    }

    package "Delivery Entity" as delivery_entity {
        usecase "Manage Deliveries" as manage_deliveries
        
        ' CRUD Operations extending from Manage Deliveries
        usecase "Create Delivery" as create_delivery
        usecase "Read Delivery Status" as read_delivery
        usecase "Update Delivery Status" as update_delivery
        usecase "Complete Delivery" as complete_delivery
        
        ' Extended functions
        usecase "View Assigned Deliveries" as view_deliveries
        usecase "View Delivery History" as view_history_delivery
    }
}

' Right side actors
actor "Delivery Driver" as driver

' CRUD Relationships - Orders
manage_orders --> (create_order) : <<include>>
manage_orders --> (read_order) : <<include>>
manage_orders --> (update_order) : <<include>>
manage_orders --> (cancel_order) : <<include>>

' Extended Order operations
read_order ..> track_order : extends
read_order ..> view_history : extends
read_order ..> place_order : extends
read_order ..> add_cart : extends

' CRUD Relationships - Menu
manage_menu --> (create_menu) : <<include>>
manage_menu --> (read_menu) : <<include>>
manage_menu --> (update_menu) : <<include>>
manage_menu --> (delete_menu) : <<include>>

' Extended Menu operations
read_menu ..> browse_menu : extends
read_menu ..> manage_cat : extends

' CRUD Relationships - Reservations
manage_reservations --> (create_reservation) : <<include>>
manage_reservations --> (read_reservation) : <<include>>
manage_reservations --> (update_reservation) : <<include>>
manage_reservations --> (cancel_reservation) : <<include>>

' Extended Reservation operations
read_reservation ..> make_reservation : extends

' CRUD Relationships - Users
manage_users --> (create_user) : <<include>>
manage_users --> (read_user) : <<include>>
manage_users --> (update_user) : <<include>>
manage_users --> (delete_user) : <<include>>

' Extended User operations
read_user ..> register : extends
read_user ..> login : extends
read_user ..> manage_drivers : extends
read_user ..> manage_staff : extends

' CRUD Relationships - Payments
manage_payments --> (create_payment) : <<include>>
manage_payments --> (read_payment) : <<include>>
manage_payments --> (update_payment) : <<include>>
manage_payments --> (refund_payment) : <<include>>

' Extended Payment operations
read_payment ..> make_payment : extends
read_payment ..> process_payments : extends
read_payment ..> approve_refunds : extends

' CRUD Relationships - Deliveries
manage_deliveries --> (create_delivery) : <<include>>
manage_deliveries --> (read_delivery) : <<include>>
manage_deliveries --> (update_delivery) : <<include>>
manage_deliveries --> (complete_delivery) : <<include>>

' Extended Delivery operations
read_delivery ..> view_deliveries : extends
read_delivery ..> view_history_delivery : extends

' Extended Analytics operations
' Actor Relationships
customer --> manage_orders
customer --> manage_menu
customer --> manage_reservations
customer --> manage_users
customer --> manage_payments

admin --> manage_orders
admin --> manage_menu
admin --> manage_reservations
admin --> manage_users
admin --> manage_payments
admin --> manage_deliveries

driver --> manage_deliveries

note right of manage_orders : <b>CRUD Structure:</b>\n• Create: Place new orders\n• Read: View order details\n• Update: Modify orders\n• Cancel/Delete: Cancel orders

note right of create_order : Each entity follows CRUD pattern:\nBase management operation extended\nby Create, Read, Update, Delete functions

note right of manage_deliveries : Delivery CRUD covers assignment,\nstatus updates, and completion\nwith driver coordination

note right of manage_menu : <b>CRUD Extension Pattern:</b>\n• Base entity operations (Manage X)\n• Extended by CRUD operations\n• Further extended by specialized functions\n• Shows progression from basic to advanced operations

note right of admin : <b>User Types:</b>\n• Customer: CRUD operations on personal entities\n• Admin: Full CRUD operations on all system entities\n• Driver: CRUD operations on delivery assignments

@enduml