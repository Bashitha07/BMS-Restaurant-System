@startuml BMS_Restaurant_System_Entities_Class_Diagram
!theme plain
title BMS Restaurant System - Domain Entities Class Diagram

' ==========================================
' ENTITIES (Domain Model)
' ==========================================

class User {
    +id: Long
    +username: String
    +email: String
    +phone: String
    +password: String
    +role: Role
    +enabled: boolean
    +promoCode: String
    +discountPercent: BigDecimal
    +promoExpires: LocalDateTime
    +promoActive: Boolean
    --
    +getters/setters
}

class Order {
    +id: Long
    +orderDate: LocalDateTime
    +status: OrderStatus
    +totalAmount: BigDecimal
    +subtotal: BigDecimal
    +taxAmount: BigDecimal
    +deliveryFee: BigDecimal
    +paymentMethod: PaymentMethod
    +deliveryAddress: String
    +deliveryPhone: String
    +specialInstructions: String
    +orderType: OrderType
    +estimatedDeliveryTime: LocalDateTime
    +actualDeliveryTime: LocalDateTime
    +createdAt: LocalDateTime
    +updatedAt: LocalDateTime
    --
    +calculateTotalPrice()
}

class OrderItem {
    +id: Long
    +quantity: Integer
    +unitPrice: BigDecimal
    +totalPrice: BigDecimal
    +specialInstructions: String
    --
    +calculateTotalPrice()
    +setMenuAndCalculatePrice()
}

class Menu {
    +id: Long
    +name: String
    +description: String
    +price: BigDecimal
    +category: String
    +isAvailable: Boolean
    +imageUrl: String
    +preparationTime: Integer
    +ingredients: String
    +allergens: String
    +createdAt: LocalDateTime
    +updatedAt: LocalDateTime
    --
    +getters/setters
}

class Payment {
    +id: Long
    +amount: BigDecimal
    +paymentMethod: PaymentMethod
    +status: PaymentStatus
    +transactionId: String
    +slipImage: String
    +paymentGateway: String
    +gatewayTransactionId: String
    +submittedDate: LocalDateTime
    +processedDate: LocalDateTime
    +notes: String
    --
    +getters/setters
}

class Delivery {
    +id: Long
    +deliveryAddress: String
    +deliveryPhone: String
    +deliveryInstructions: String
    +status: DeliveryStatus
    +deliveryFee: BigDecimal
    +estimatedDeliveryTime: LocalDateTime
    +actualDeliveryTime: LocalDateTime
    +deliveredAt: LocalDateTime
    +notes: String
    --
    +getters/setters
}

class Driver {
    +id: Long
    +name: String
    +phone: String
    +email: String
    +vehicleType: String
    +vehicleNumber: String
    +licenseNumber: String
    +status: DriverStatus
    +rating: BigDecimal
    +totalDeliveries: Integer
    +earnings: BigDecimal
    +createdAt: LocalDateTime
    +updatedAt: LocalDateTime
    --
    +getters/setters
}

class Reservation {
    +id: Long
    +reservationDate: LocalDate
    +reservationTime: LocalTime
    +reservationDateTime: LocalDateTime
    +timeSlot: String
    +numberOfPeople: Integer
    +status: ReservationStatus
    +customerName: String
    +customerEmail: String
    +customerPhone: String
    +specialRequests: String
    +createdAt: LocalDateTime
    +updatedAt: LocalDateTime
    --
    +getters/setters
}

class Notification {
    +id: Long
    +userId: Long
    +title: String
    +message: String
    +type: NotificationType
    +isRead: Boolean
    +createdAt: LocalDateTime
    --
    +getters/setters
}

class Review {
    +id: Long
    +orderId: Long
    +rating: Integer
    +comment: String
    +createdAt: LocalDateTime
    --
    +getters/setters
}

class PaymentSlip {
    +id: Long
    +orderId: Long
    +imageUrl: String
    +status: PaymentSlipStatus
    +uploadedAt: LocalDateTime
    +reviewedAt: LocalDateTime
    +reviewerNotes: String
    --
    +getters/setters
}

' ==========================================
' ENUMS
' ==========================================

enum Role {
    USER
    ADMIN
    DRIVER
    KITCHEN
    MANAGER
}

enum OrderStatus {
    PENDING
    CONFIRMED
    PREPARING
    READY_FOR_PICKUP
    OUT_FOR_DELIVERY
    DELIVERED
    CANCELLED
    REFUNDED
}

enum OrderType {
    DELIVERY
    PICKUP
    DINE_IN
}

enum PaymentMethod {
    CASH_DEPOSIT
    CASH_ON_DELIVERY
}

enum PaymentStatus {
    PENDING
    COMPLETED
    FAILED
    REFUNDED
}

enum DeliveryStatus {
    PENDING
    ASSIGNED
    PICKED_UP
    OUT_FOR_DELIVERY
    DELIVERED
    CANCELLED
}

enum DriverStatus {
    AVAILABLE
    BUSY
    OFFLINE
}

enum ReservationStatus {
    PENDING
    CONFIRMED
    CANCELLED
    COMPLETED
}

enum NotificationType {
    ORDER_UPDATE
    PAYMENT_UPDATE
    DELIVERY_UPDATE
    PROMOTION
}

enum PaymentSlipStatus {
    PENDING
    APPROVED
    REJECTED
}

' ==========================================
' RELATIONSHIPS
' ==========================================

' Entity Relationships (Associations)
User --o{ Order : places (1..*)
User --o{ Reservation : makes (1..*)
Order --o{ Payment : has (1..*)
Order --o| Delivery : has (1..1)
OrderItem }o--|| Menu : references (1..1)

' Composition Relationships
Order *--{ OrderItem : contains (1..*)

' Aggregation Relationships
Driver o--o{ Delivery : delivers (1..*)

' Dependency Relationships (Enums)
User .. Role : uses
Order .. OrderStatus : uses
Order .. OrderType : uses
Order .. PaymentMethod : uses
Payment .. PaymentMethod : uses
Payment .. PaymentStatus : uses
Delivery .. DeliveryStatus : uses
Driver .. DriverStatus : uses
Reservation .. ReservationStatus : uses
Notification .. NotificationType : uses
PaymentSlip .. PaymentSlipStatus : uses

@enduml